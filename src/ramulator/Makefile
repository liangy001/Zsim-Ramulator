CXX:=g++
CXXFLAGS=-DRAMULATOR -Wall -std=c++11 -w
OPTFLAGS=-O3 


ifdef DEBUG
ifeq ($(DEBUG), 1)
OPTFLAGS= -O0 -g
endif
endif
CXXFLAGS+=$(OPTFLAGS)

EXE_NAME=ramulator
STATIC_LIB_NAME := libramulator.a
LIB_NAME=libramulator.so
LIB_NAME_MACOS=libramulator.dylib


SRC = $(wildcard *.cc)
OBJ = $(addsuffix .o, $(basename $(SRC)))

LIB_SRC := $(filter-out  Gem5Wrapper.cc,$(SRC))
LIB_OBJ := $(addsuffix .o, $(basename $(LIB_SRC)))

#build portable objects (i.e. with -fPIC)
POBJ = $(addsuffix .po, $(basename $(LIB_SRC)))

REBUILDABLES=$(OBJ) ${POBJ} $(EXE_NAME) $(LIB_NAME) $(STATIC_LIB_NAME)

all: ${EXE_NAME}

#   $@ target name, $^ target deps, $< matched pattern
$(EXE_NAME): $(OBJ)
	$(CXX) $(CXXFLAGS)  -o $@ $^ 
	@echo "Built $@ successfully" 

$(LIB_NAME): $(POBJ)
	$(CXX) -g -shared -Wl,-soname,$@ -o $@ $^
	@echo "Built $@ successfully"

$(STATIC_LIB_NAME): $(LIB_OBJ)
	$(AR) crs $@ $^

$(LIB_NAME_MACOS): $(POBJ)
	$(CXX) -dynamiclib -o $@ $^
	@echo "Built $@ successfully"

#include the autogenerated dependency files for each .o file
-include $(OBJ:.o=.dep)
-include $(POBJ:.po=.deppo)

# build dependency list via gcc -M and save to a .dep file
%.dep : %.cc
	@$(CXX) -M $(CXXFLAGS) $< > $@

%.deppo : %.cc
	@$(CXX) -M $(CXXFLAGS) -MT"$*.po" $< > $@

# build all .cc files to .o files
%.o : %.cc
	$(CXX) $(CXXFLAGS) -o $@ -c $<

#po = portable object .. for lack of a better term
%.po : %.cc
	$(CXX) $(CXXFLAGS) -DLOG_OUTPUT -fPIC -o $@ -c $<

clean: 
	-rm -f $(REBUILDABLES) *.dep *.deppo
